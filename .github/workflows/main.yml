name: Development Project Build

on:
  push:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y build-essential
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.2'
          arch: 'linux_gcc_64'
      - name: Build Project on Linux
        run: |
          cd src
          cmake .
          make
      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-linux
          path: src/ngPost

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.2.0'
          version: '6.8.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
      - name: Build Project on Windows with MSVC
        run: |
          cd src
          cmake -G "Visual Studio 17 2022" -D CMAKE_RUNTIME_OUTPUT_DIRECTORY=./release .  # Use '.' for current directory
          cmake --build . --config Release
      - name: Deploy Qt DLLs with windeployqt
        run: |
          windeployqt src/release/ngPost.exe --release --qmldir src --compiler-runtime
      - name: Clean Build Artifacts
        run: |
          cd src/release
          Remove-Item -Force *.obj, *.cpp, *.rc, *.res, *.h, *.qrc
      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-windows
          path: src/release/**

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.2'
          arch: 'clang_64'
      - name: Build Project on macOS
        run: |
          cd src
          cmake .
          make
      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-macos
          path: src/ngPost.app/Contents/MacOS/ngPost

  collect-and-upload-binaries:
    name: Collect and Upload All Final Binaries
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]

    steps:
      - name: Download All Binaries
        uses: actions/download-artifact@v4
        with:
          path: all-binaries

      - name: Upload Final Packed Binaries
        uses: actions/upload-artifact@v4
        with:
          name: compiled-binaries
          path: all-binaries/
